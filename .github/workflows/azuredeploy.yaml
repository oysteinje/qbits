on: [push]
name: azure deploy 
env:
  AZURE_LOCATION: norwayeast
  AZURE_PREFIX: ystrte
  AZURE_RESOURCE_GROUP: rg-main
  AZURE_DNS_ZONE: qbits.no
  AZURE_SUBSCRIPTION_ID: a83145a3-215b-44a4-9387-a540faaa58e9

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
    - uses: actions/checkout@main

#       # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.QBITS_AZURE_CREDENTIALS }}

      # Deploy resources
    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.28.0
        inlineScript: |
          echo "# Enable xtrace"
          set -o xtrace

          echo "# Deploy Resource group" 
          az group create -l ${{ env.AZURE_LOCATION }} -n ${{ env.AZURE_RESOURCE_GROUP }}
    
          echo "# Deploy network"
          az deployment group create \
            --name rollout01-${{ env.GITHUB_RUN_NUMBER }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --template-file ./azure/azure-vnet.bicep

          echo "# Get deployment output" 
          az deployment group show \
            -g ${{ env.AZURE_RESOURCE_GROUP }} \
            -n rollout01-${{ env.GITHUB_RUN_NUMBER }} \
            --query properties.outputs.subnet1Id.value

          echo "# Deploy Virtual Machine" 
          az vm create \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --location ${{ env.AZURE_LOCATION }} \
            --name "vm-${{ env.AZURE_PREFIX }}" \
            --image UbuntuLTS \
            --admin-username azureuser \
            --public-ip-sku Standard \
            --ssh-key-values ./.ssh/id_rsa.pub \
            --public-ip-address-dns-name backend-${{ env.AZURE_PREFIX }} \
            --assign-identity \
            --size Standard_B2s

          echo "# open port 80 for web traffic"
          az vm open-port \
            --port 80 \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --name "vm-${{ env.AZURE_PREFIX }}" \
            --priority 900

          echo "# open port 443 for web traffic"
          az vm open-port \
            --port 443 \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --name "vm-${{ env.AZURE_PREFIX }}" \
            --priority 800

          echo "# create dns zone" 
          az network dns zone create \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --name ${{ env.AZURE_DNS_ZONE }}

          echo "# create empty cname" 
          az network dns record-set cname create \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --zone-name ${{ env.AZURE_DNS_ZONE }} \
            --name main.azure

          echo "# set cname" 
          az network dns record-set cname set-record \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --zone-name ${{ env.AZURE_DNS_ZONE }} \
            --record-set-name main.azure \
            --cname backend-${{ env.AZURE_PREFIX }}.${{ env.AZURE_LOCATION }}.cloudapp.azure.com

          echo "# create empty cname for me.qbits.no" 
          az network dns record-set cname create \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --zone-name ${{ env.AZURE_DNS_ZONE }} \
            --name me

          echo "# set cname for me.qbits.no" 
          az network dns record-set cname set-record \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --zone-name ${{ env.AZURE_DNS_ZONE }} \
            --record-set-name me.qbits \
            --cname oysteinje.github.io

          echo "# bootstrap VM"
          az vm run-command invoke \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }}  \
            --name "vm-${{ env.AZURE_PREFIX }}" \
            --command-id RunShellScript \
            --scripts "export FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }}; echo ${{ secrets.FIREBASE_TOKEN }} > /home/azureuser/firebase_token;  curl https://raw.githubusercontent.com/oysteinje/qbits/main/bootstrap-vm.sh | bash"

          # az vm create \


          #   --generate-ssh-keys \
          #   --priority Spot \
          #    --priority Spot \
          #   --size Standard_A2_v2 \ 
          #   --eviction-policy Delete \
          #   --custom-data ./MyCloudInitScript.yml \
          #             --role Contributor \
          #  --scope "/subscriptions/${{ env.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZURE_RESOURCE_GROUP }}" \
          #   --assign-identity \
          #   --role Contributor \
          #   
          #   --authentication-type ssh \
          #   --tags location=${{ env.AZURE_LOCATION}} prefix=${{ env.AZURE_PREFIX }} resourcegroup=${{ env.AZURE_RESOURCE_GROUP }} \ 
          #   --subnet "/subscriptions/${{ env.AZURE_SUBSCRIPTION_ID }}/resourcegroups/${{ env.AZURE_RESOURCE_GROUP }}/providers/Microsoft.Network/virtualNetworks/vnet-main/subnets/main"

          # Create SSH key 
          #az sshkey create --location ${{ env.AZURE_LOCATION }} --public-key "@filename" --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name "mySshPublicKeyName"

#           # Deploy Resource group 
#           az group create -l ${{ env.AZURE_LOCATION }} -n ${{ env.AZURE_RESOURCE_GROUP }}
          


#           # Deploy Azure Kubernetes 
#           az deployment group create \
#             --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
#             --template-file ./kubernetes/aks/main.bicep \
#             --parameters subnetID="/subscriptions/${{ env.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZURE_RESOURCE_GROUP }}/providers/Microsoft.Network/virtualNetworks/${{ env.AZURE_VNET }}/subnets/AzureKubernetes"
          
          
#           # curl -o get-akse.sh https://raw.githubusercontent.com/Azure/aks-engine/master/scripts/get-akse.sh
#           # chmod 700 get-akse.sh
#           # ./get-akse.sh

#           # aks-engine deploy --dns-prefix ${{ env.AZURE_DNS_PREFIX }} \
#           #   --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
#           #   --location ${{ env.AZURE_LOCATION }} \
#           #   --api-model kubernetes/aks/example.json

#           # KUBECONFIG=_output/${{ env.AZURE_DNS_PREFIX }}/kubeconfig/kubeconfig.${{ env.AZURE_LOCATION }}.json kubectl cluster-info